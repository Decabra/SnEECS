import pygame
import time
import random
pygame.init()
# All variables
screen_width = 800
screen_hieght = 600
car_width = 50
car_hieght = 80
# All required colors
white = (255, 255, 255)
black = (0, 0, 0)
red = (255, 0, 0)
hot_red = (180, 0, 0)
light_red = (255, 96, 96)
green = (0, 255, 0)
hot_green = (0, 200, 0)
light_green = (96, 255, 96)
blue = (0, 0, 255)
# Window 
window = pygame.display.set_mode((screen_width, screen_hieght))
pygame.display.set_caption('Game')
# Our game clock
clock = pygame.time.Clock()
# Car image 
carImg = pygame.image.load('car.png')
carImg = pygame.transform.scale(carImg, (car_width, car_hieght))
def dodge(dodge):
    font = pygame.font.Font('freesansbold.ttf',12)
    text = font.render('Dodged: '+str(dodge), True, black)
    window.blit(text, (0,0))
    
# To blit car on the window
def car(x, y):
    window.blit(carImg,(x, y))
# To display the message when car crashed
def message_display(text):
    font = pygame.font.Font('freesansbold.ttf', 70)
    msg = font.render(text, True, black)
    window.blit(msg,((screen_width/2)-len(text)*22,50))
    pygame.display.update()
    time.sleep(2)
    gameLoop()
    
def crash():
    message_display('GAME OVER')
# enemy block
def enemy(thingX,thingY,thingW,thingH,color):
    pygame.draw.rect(window, black, (thingX,thingY,thingW,thingH))
def button(msg,x,y,w,h,ac,ic, action):
            mouse = pygame.mouse.get_pos()
            click = pygame.mouse.get_pressed()
            if x+w > mouse[0] > x and y+h > mouse[1] > y:
                pygame.draw.rect(window, ac, (x, y, w, h))
                if click[0] == 1:
                    if action == 'play':
                        gameLoop()
                    elif action == 'quit':
                        pygame.quit()
                        quit()
            else:
                pygame.draw.rect(window, ic, (x, y, w, h))
            font = pygame.font.Font('freesansbold.ttf', 20)
            msg = font.render(msg, True, black)
            window.blit(msg,((x-20)+(w/2),(y-10)+(h/2)))
            

def menu():
        intro = True
        while intro:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    quit()
            window.fill(white)
            font = pygame.font.Font('freesansbold.ttf', 70)
            msg = font.render('Snake Game', True, black)
            window.blit(msg,((screen_width/2)-len('Snake Game')*22,50))
            button('GO !',150,450,100,50,green,hot_green,'play')
            button('Quit!',550,450,100,50,red,hot_red,'quit')
            pygame.display.update()
# Game main loop
def gameLoop():
    dodged = 0
    x = screen_width*0.45
    y = screen_hieght*0.8
    x_change = 0
    y_change = 0
    start_thingX = random.randrange(0,screen_width)
    start_thingY = -300
    thing_speed = 7
    thing_width = 50
    thing_hieght = 50
    run = True
    while run:
        # To quit the window when cross button pressed
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            # Key board handling
            if event.type == pygame.KEYDOWN:    
                if event.key == pygame.K_LEFT:
                    x_change = -5
                if event.key == pygame.K_RIGHT:
                    x_change = 5
                if event.key == pygame.K_UP:
                    y_change = -5
                if event.key == pygame.K_DOWN:
                    y_change = 5
            if event.type == pygame.KEYUP:
                if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT or event.key == pygame.K_UP or event.key == pygame.K_DOWN:
                    x_change,y_change = 0,0
        x = x + x_change
        y = y + y_change
                    
        window.fill(white)
        # Functions to call
        enemy(start_thingX, start_thingY, thing_width, thing_hieght, black)
        car(x, y)
        dodge(dodged)
        # To move the enemy block on the screen
        start_thingY += thing_speed
        # To regenrate the block randomly after colliding wall 
        if start_thingY > screen_hieght:
            start_thingY = 0-thing_hieght
            start_thingX = random.randrange(0, screen_width)
            dodged+=1
            thing_width+=1
        # For collision of block with car    
            
        if y < start_thingY + (thing_hieght-5):
            if x > start_thingX and x < start_thingX + thing_width or x + (car_width-5) > start_thingX and x + (car_width-5) < start_thingX + thing_width:                
                crash()
        # FOr collision of car with wall
        if x > screen_width-50 or x < 0 or y > screen_hieght-80 or y < 0:
            crash()
        pygame.display.update()
        clock.tick(60)
menu()
gameLoop()
pygame.quit()
quit()
